#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
;

#2. How many of those orders were for an iPhone?

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID'
;

#3. Select the customer account numbers for all the orders that were placed in February.

SELECT distinct acctnum
FROM BIT_DB.customers AS cust

INNER JOIN BIT_DB.FebSales AS Feb
ON cust.order_id = Feb.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
;

#4. Which product was the cheapest one sold in January, and what was the price?

SELECT distinct Product
, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) 
FROM BIT_DB.JanSales)
;

#5. What is the total revenue for each product sold in January?

SELECT product
, SUM(quantity)*price AS revenue
FROM BIT_DB.JanSales
GROUP BY product
;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT Product,
SUM(Quantity)
, SUM(Quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?

SELECT COUNT(distinct cust.acctnum)
, AVG(Quantity*price)
FROM BIT_DB.FebSales AS Feb
LEFT JOIN BIT_DB.customers AS cust
ON Feb.orderid = cust.order_id
WHERE Feb.Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID'
;

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT Product
, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product
;

#9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT distinct location
, count(orderid) AS orders
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderid) >= 3
;

#10. How many of each type of headphone were sold in February?

SELECT Product
, SUM(Quantity) AS Quantity
FROM BIT_DB.FebSales
WHERE Product like '%Headphones%'
GROUP BY Product
;

#11. What was the average amount spent per account in February? 

SELECT SUM(quantity*price)/count(cust.acctnum) AS avg_amount
FROM BIT_DB.FebSales AS Feb

LEFT JOIN BIT_DB.customers AS cust
ON Feb.orderid = cust.order_id

WHERE length(orderid) = 6
AND orderid <> 'Order ID'
;

# OR #

SELECT AVG(quantity*price) AS avg_amount
FROM BIT_DB.FebSales AS Feb

LEFT JOIN BIT_DB.customers AS cust
ON Feb.orderid = cust.order_id

WHERE length(orderid) = 6
AND orderid <> 'Order ID'
;

#12. What was the average quantity of products purchased per account in February?

SELECT ROUND(AVG(Quantity)) AS avg_quantity
FROM BIT_DB.FebSales AS Feb

LEFT JOIN BIT_DB.customers AS cust
ON Feb.orderID = cust.order_id

WHERE length(orderid) = 6
AND orderid <> 'Order ID'
;

#13. Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT Product
, SUM(Quantity*price)
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(Quantity*price) desc
LIMIT 1
;
